const path = require('path');
require('dotenv').config({ path: path.resolve(__dirname, '.env') });

const TelegramBot = require('node-telegram-bot-api');
const cron = require('node-cron');
const { TELEGRAM_TOKEN } = require('./config/keys');
const CommandHandler = require('./handlers/commandHandler');
const MessageHandler = require('./handlers/messageHandler');
const englishService = require('./services/englishService');

console.log('üöÄ Starting Weather Wardrobe Bot...');

const bot = new TelegramBot(TELEGRAM_TOKEN, {
  polling: true,
  onlyFirstMatch: true
});

// –ì–ª–∞–≤–Ω–æ–µ –∫–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    
    const keyboard = {
        reply_markup: {
            keyboard: [
                ['üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª–µ', 'üìö –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ —Ñ—Ä–∞–∑—ã'],
                ['‚≠ê –ú–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è', '‚ùì –ü–æ–º–æ—â—å']
            ],
            resize_keyboard: true,
            one_time_keyboard: false
        }
    };
    
    bot.sendMessage(chatId, 
        'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *Weather Wardrobe Bot*!\n\n' +
        '‚ú® *–ß—Ç–æ —è —É–º–µ—é:*\n' +
        'üå§Ô∏è –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª–µ\n' +
        'üëï –î–∞–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–¥–µ–∂–¥–µ\n' +
        'üìö –û–±—É—á–∞—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–º —Ñ—Ä–∞–∑–∞–º\n' +
        'üíæ –°–æ—Ö—Ä–∞–Ω—è—Ç—å –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è\n\n' +
        '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá', 
        { 
            parse_mode: 'Markdown',
            reply_markup: keyboard.reply_markup 
        }
    );
});

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é –¥–ª—è BotFather
bot.setMyCommands([
    { command: 'start', description: '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' },
    { command: 'weather', description: '–ü–æ–≥–æ–¥–∞ –≤ –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª–µ' },
    { command: 'phrases', description: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–µ —Ñ—Ä–∞–∑—ã' },
    { command: 'preferences', description: '–ú–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è' },
    { command: 'help', description: '–ü–æ–º–æ—â—å' }
]);

new CommandHandler(bot);
new MessageHandler(bot);

cron.schedule('0 9 * * *', async () => {
  console.log('üìö Reloading English phrases...');
  await englishService.loadPhrases();
});

bot.on('error', (error) => {
  console.error('‚ùå Bot error:', error);
});

process.on('unhandledRejection', (error) => {
  console.error('‚ö†Ô∏è Unhandled Rejection:', error);
});

console.log('‚úÖ Bot started successfully!');