const axios = require('axios');
const { weatherApiKey } = require('../config/keys');

class WeatherService {
  async getWeather(city) {
    try {
      const response = await axios.get(
        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${weatherApiKey}&units=metric&lang=ru`
      );
      
      return this.formatWeatherData(response.data);
    } catch (error) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.');
    }
  }

  formatWeatherData(data) {
    const temp = Math.round(data.main.temp);
    const feelsLike = Math.round(data.main.feels_like);
    const humidity = data.main.humidity;
    const windSpeed = data.wind.speed;
    const description = data.weather[0].description;
    const city = data.name;

    return {
      city,
      temp,
      feelsLike,
      humidity,
      windSpeed,
      description,
      advice: this.generateClothingAdvice(temp, description)
    };
  }

  generateClothingAdvice(temp, description) {
    let advice = '';
    
    if (temp <= -10) {
      advice = '‚ùÑÔ∏è –û–¥–µ–≤–∞–π—Ç–µ—Å—å –æ—á–µ–Ω—å —Ç–µ–ø–ª–æ: –ø—É—Ö–æ–≤–∏–∫, —Ç–µ—Ä–º–æ–±–µ–ª—å–µ, —à–∞–ø–∫–∞, —à–∞—Ä—Ñ, –ø–µ—Ä—á–∞—Ç–∫–∏';
    } else if (temp <= 0) {
      advice = '‚õÑÔ∏è –¢–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞: –∑–∏–º–Ω—è—è –∫—É—Ä—Ç–∫–∞, —à–∞–ø–∫–∞, —à–∞—Ä—Ñ';
    } else if (temp <= 10) {
      advice = 'üçÇ –õ–µ–≥–∫–∞—è –∫—É—Ä—Ç–∫–∞ –∏–ª–∏ –ø–∞–ª—å—Ç–æ, –¥–∂–∏–Ω—Å—ã, –∑–∞–∫—Ä—ã—Ç–∞—è –æ–±—É–≤—å';
    } else if (temp <= 20) {
      advice = 'üå§Ô∏è –õ–µ–≥–∫–∞—è –∫–æ—Ñ—Ç–∞ –∏–ª–∏ –≤–µ—Ç—Ä–æ–≤–∫–∞, –¥–ª–∏–Ω–Ω—ã–µ –±—Ä—é–∫–∏';
    } else {
      advice = '‚òÄÔ∏è –õ–µ–≥–∫–∞—è –æ–¥–µ–∂–¥–∞: —Ñ—É—Ç–±–æ–ª–∫–∞, —à–æ—Ä—Ç—ã, –ø–∞–Ω–∞–º–∞ –æ—Ç —Å–æ–ª–Ω—Ü–∞';
    }

    if (description.includes('–¥–æ–∂–¥—å')) {
      advice += ', –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –∑–æ–Ω—Ç! ‚òî';
    } else if (description.includes('—Å–Ω–µ–≥')) {
      advice += ', waterproof –æ–±—É–≤—å —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞!';
    } else if (description.includes('—Å–æ–ª–Ω')) {
      advice += ', —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏ –±—É–¥—É—Ç –∫—Å—Ç–∞—Ç–∏! üòé';
    }

    return advice;
  }
}

module.exports = new WeatherService();
